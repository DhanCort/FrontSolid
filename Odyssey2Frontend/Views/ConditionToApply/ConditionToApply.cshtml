<div class="card" style=" background-color: #e6e7e8; color: #58585b; border-style: none; margin-bottom: 0 !important">
	<div class="card-body">
		<div class="row align-items-center" style="margin-top: 1% !important; margin-bottom: 1% !important">
			<div class="col-sm-6 mx-auto">
				When
				<span class="select dropdownDarker">
					<select id="strOperator" class="generalOperator">
						<option value="AND">All</option>
						<option value="OR">Any</option>
					</select>
				</span>
				of the following conditions match
			</div>
			<div class="col-sm-6 text-right">
				<button type="button" class="btn btn-primary btnAddConditionGroup"
						data-intMargin="0"
						data-boolFromGroup="false"
						data-boolCondition="true"
						data-boolGeneral="true" data-toggle="tooltip" data-placement="top" title="Create a new condition to compare.">
					<i class="fa fa-plus"></i> Condition
				</button>
				<button type="button" class="btn btn-primary btnAddConditionGroup"
						data-intMargin="0"
						data-boolFromGroup="false"
						data-boolCondition="false"
						data-boolGeneral="true" data-toggle="tooltip" data-placement="top" title="Create a new group of conditions to compare.">
					<i class="fa fa-plus"></i> Group
				</button>
				@*<button class="btn btn-danger btnRemoveConditionGroup"><i class="fa fa-trash"></i></button>*@
			</div>
		</div>
	</div>
</div>
<div class="row" style="margin-top: 5px !important">
	<form class="col-sm-12" style="padding-left: 0px !important; padding-right: 0px !important">
		@if ((bool)ViewBag.boolSetCondition)
		{
			<input id="strConditionToApply" type="hidden" />
			<input id="intnPkIn" type="hidden" />
			<input id="intnPkOut" type="hidden" />
		}
		<div class="col-sm-12 pl-0 pr-0" id="conditionBody">

		</div>
	</form>
</div>

<script>
          darrattr = @Json.Serialize(ViewBag.darrattr)
         @if (ViewBag.ConditionObject != null) {
             <text>
                funCreateConditionForm(@Html.Raw(ViewBag.ConditionObject), "false", "true", 0)
             </text>
          }
</script>
@*
	@model SelectList

	@{
		ViewData["Title"] = "ConditionToApply";
	}

	<input id="boolSetCondition" type="hidden" value="@(((bool)ViewBag.boolSetCondition).ToString())" />
	@if (
	   (bool)ViewBag.boolSetCondition
	   )
	{
		<input id="strConditionToApply" type="hidden" />
		<input id="intnPkIn" type="hidden" />
		<input id="intnPkOut" type="hidden" />

	}

	<div class="row mb-2">
		<div class="col-sm-6">
			<label class="input-label">Minimum</label>
			<input class="form-control input-with-dropdowns" id="inferiorLimitInputConditionToApply" type="number"
				   autofocus name="inferiorLimit" min="0.01" step="0.01" />
		</div>
		<div class="col-sm-6">
			<label class="input-label">Maximum:</label>
			<input class="form-control input-with-dropdowns" id="superiorLimitInputConditionToApply" type="number"
				   name="superiorLimit" min="0.01" step="0.01" />
		</div>
	</div>
	<div class="row">
		<div class="col-md-5-5"></div>
		<div class="checkbox-switch switchConditionToApply">
			<div class="switch-plate" style="width:120px;">
				<div class="switch on" id="switchConditionToApply" data-on="And" data-off="Or">
				</div>
			</div><label>And</label>
		</div>
	</div>

	<div class="row">
		<div class="col-sm-12">
			<span class="select" style="width:1400px;">
				@Html.DropDownList("Operation 0", Model, new { @class = "product-type select-condition",
					@id = "select-condition" })
			</span>
		</div>
	</div>

	<div class="row">
		<div class="col-sm-12">
			<form class="form-inline conditions-to-apply">
				<div class="conditions-body">
				</div>
			</form>
		</div>
	</div>
	<br />
	<br />
	<div class="row">
		<div class="col-sm-12 text-center">
			<div class="alert alert-success" id="currentStrConditionsToApply">
			</div>
		</div>
		@if (
		(bool)ViewBag.boolSetCondition
		)
		{
			<div class="col-sm-12 text-center">
				<button type="button" id="setCondition" class="btn btn-primary"><span class="fa fa-floppy-o"></span>
				Set Condition</button>
			</div>
		}
	</div>*@